This file provides installation instructions, a sample test run and
a list of the files the project with a brief description for each one.


Installation
============

To install MatchingTools using pip do

  pip install matchingtools

To install MatchingTools from a local copy of the project open a terminal
in the top level directory and type

  python setup.py install

  
Documentation
=============

A documentation with some examples and a detailed description of the
modules in the library is at: http://matchingtools.readthedocs.io/en/latest/.
Inside a local copy of the project, it can be generated by running

  make html

in the doc directory. It will appear in doc/_build/html (the starting
point is index.html)


Sample test runs
================

To test that MatchingTools is working correctly, you can run the script
examples/simple_example.py. It should produce a text file named
"simple_example_results.txt" with the following content

  Collected:
    O1phi:
      (2+0j) {MXi^-4.0}(24)kappa()kappa()

    O3phi:
      (-1+0j) {MXi^-4.0}(24)kappa()kappa()

    OD2phi:
      (0.5+0j) {MXi^-4.0}(24)kappa()kappa()

    OD2phic:
      (0.5+0j) {MXi^-4.0}(24)kappa()kappa()

    Ophi4:
      (0.5+0j) {MXi^-2.0}(10)kappa()kappa()

    Ophi6:
      (-1+0j) {MXi^-4.0}(21)lamb()kappa()kappa()

  Rest:


Similarly, the script "extras_example.py" should produce the
following output:

  Collected:
    O1phid:
      (-0.5+0j) {MDY^-2.0}(14)lambdaDYd(14,-2)lambdaDYdc(14,-1)
  
    O1phidc:
      (-0.5+0j) {MDY^-2.0}(14)lambdaDYdc(14,-2)lambdaDYd(14,-1)
  
    O1phiq:
      (-0.25+0j) {MD^-2.0}(0)lambdaDq(0,-2)lambdaDqc(0,-1)
  
    O1phiqc:
      (-0.25+0j) {MD^-2.0}(0)lambdaDqc(0,-2)lambdaDq(0,-1)
  
    O3phiq:
      (-0.25+0j) {MD^-2.0}(0)lambdaDq(0,-2)lambdaDqc(0,-1)
  
    O3phiqc:
      (-0.25+0j) {MD^-2.0}(0)lambdaDqc(0,-2)lambdaDq(0,-1)
  
    Odphi:
      (0.5+0j) {MD^-2.0}(0)yd(10,-2)lambdaDqc(0,-1)lambdaDq(0,10)
      (-1+0j) {MD^-1.0}(15){MDY^-1.0}(14)lambdaDYDc(14,15)lambdaDqc(15,-1)
          lambdaDYd(14,-2)
      (0.5+0j) {MDY^-2.0}(14)yd(-1,26)lambdaDYd(14,-2)lambdaDYdc(14,26)
  
    Odphic:
      (0.5+0j) {MD^-2.0}(0)ydc(10,-2)lambdaDq(0,-1)lambdaDqc(0,10)
      (-1+0j) {MDY^-1.0}(18){MD^-1.0}(19)lambdaDYD(18,19)lambdaDYdc(18,-2)
          lambdaDq(19,-1)
      (0.5+0j) {MDY^-2.0}(14)ydc(-1,26)lambdaDYdc(14,-2)lambdaDYd(14,26)

  Rest:



File list
=========

matchingtools (directory) -- Contains the code of library itself:
|
|-- __init__.py         Empty. Turns the directory into a python
|                       package.
|
|-- core.py             Contains basic classes and functions of the
|                       library. Tensors, operators and operator sums
|	              	are defined. The algorithms for matching and
|		        replacing are implemented.
|
|-- integration.py      Defines classes of heavy fields, with their
|                       quadratic terms and solutions to the equations
|                       of motion. Implements the tree level
|			integration algorithm.
|
|-- transformations.py  Implements the functions for the
|                       simplification of the effective Lagrangian and
|                       its transformation using replacement rules.
|
|-- output.py           Defines the class Writer for the output of the
|                       calculations.
|
|-- extras (subdirectory) -- Modules for the application to physics
    |	                     beyond the Standard Model:
    |
    |-- __init__.py        Empty. Turns the directory into a python
    |                      package.
    |
    |-- SU2.py             SU(2) group tensors and rules for
    |                      simplification.
    |
    |-- SU3.py             SU(3) group tensors and rules for
    |                      simplification.
    |
    |-- Lorentz.py         Lorentz group tensors and rules for
    |                      simplification.
    |
    |-- SM.py              Standard Model coupling constants and
    |                      fields and rules for substituting their
    |                      equations of motion.
    |
    |-- SM_dim_6_basis.py  Definition of a basis of operators for the
                           Standard Model effective Lagrangian up to
                           dimension six.

examples (directory) -- Examples of use:
|
|-- simple_example.py    Small example to demonstrate the main features
|                        of the library. It also serves as a test case.
|
|-- extras_example.py    An example with more complexity, making
                         use of several heavy fermions, flavor indices
			 and the matchingtools.extras subpackage.

doc (directory) -- Contains the source code of the documentation.

setup.py        Script for packaging and distributing the library.

setup.cfg       Configuration file for setup.py.

README.rst      Basic information.

LICENSE         The MIT license definition.

README_CPC.txt  This file. 
